#! /usr/bin/fish

argparse --name=nsend -x bootstrap,received -N 1 's/ssh=' 'd/dest=' 'b/bootstrap' 'r/received=' 'p/progress=?' -- $argv

set target (string trim -rc / $_flag_d)

if set -q _flag_p
    echo "using 'pv -W$_flag_p' to show progress"
    set pipe "| pv -W$_flag_p |"
else
    set pipe "|"
end

if set -q _flag_s
    if ssh -i /home/micke/.ssh/id_rsa $_flag_s test -d $target
        set ssh "ssh -i /home/micke/.ssh/id_rsa $_flag_s sudo -n"
    else
        echo "Could not find '$target' on '$_flag_s'."
        exit 1
    end
else
    set ssh ""
end

if not set -q _flag_d
    echo "missing destination, did you mean '--dest $argv[1] $argv[2]..'?" >&2
    exit 1
end

if set -q _flag_r
    echo "'--received' argument not yet implemented.." >&2
    exit 1
end


for snap in $argv

    set vol (string split . $snap)[1]
    
    if set -q _flag_s
        # We can't use symlinks over ssh
        set head $vol.ssh.$_flag_s
    else
        set head $target/$vol.received

        if not test -s $head
            echo "'$head' is not a symbolic link." >&2
            set head $vol.head
            echo "Trying $head instead." >&2
        end
    end
    
    if test -s $head
        eval btrfs send -p $head $snap $pipe $ssh btrfs receive $target
    else if set -q _flag_b
        echo "Bootstrapping by sending $snap..." >&2

        eval btrfs send $snap $pipe $ssh btrfs receive $target
        ln -sfT $snap $vol.head
        if set -q _flag_s
            ln -sfT (pwd)/$snap $vol.ssh.$_flag_s
        else
            ln -sfT (pwd)/$snap $target/$vol.received
        end
    else
	echo "'$head' is not a symbolic link." >&2
        exit 1
    end
    
    set succ $status
    if test $succ -ne 0
        exit $succ
    end

    ln -sfT $snap $vol.head
    if set -q _flag_s
        ln -sfT (pwd)/$snap $vol.ssh.$_flag_s
    else
        ln -sfT (pwd)/$snap $target/$vol.received
    end

    set vols $vols $vol

end

if set -q _flag_s
    exit 0
end

set weekstamp (date +%Y-v%V-%u-%a-%H.%M.%S)

for vol in $vols

    if not test -d $vol
        echo "\"$vol\" is not a directory."
        exit 1
    end

    if not test -d @heads
        echo "@heads is not a directory."
        exit 1
    end
    
    set head $vol.head
    set snap "@heads/$vol.head.$weekstamp"

    if not test -e $snap
        btrfs subvolume snapshot -r $vol $snap
        btrfs send -c $head $snap | btrfs receive $target
    end
end
